[{"C:\\Users\\matta\\Desktop\\Coding\\Codeworks\\Job Applications\\nPlan\\data-visualisation\\src\\index.js":"1","C:\\Users\\matta\\Desktop\\Coding\\Codeworks\\Job Applications\\nPlan\\data-visualisation\\src\\reportWebVitals.js":"2","C:\\Users\\matta\\Desktop\\Coding\\Codeworks\\Job Applications\\nPlan\\data-visualisation\\src\\components\\Report\\index.js":"3","C:\\Users\\matta\\Desktop\\Coding\\Codeworks\\Job Applications\\nPlan\\data-visualisation\\src\\components\\Report\\Report.jsx":"4","C:\\Users\\matta\\Desktop\\Coding\\Codeworks\\Job Applications\\nPlan\\data-visualisation\\src\\components\\LineGraph\\index.js":"5","C:\\Users\\matta\\Desktop\\Coding\\Codeworks\\Job Applications\\nPlan\\data-visualisation\\src\\components\\LineGraph\\LineGraph.jsx":"6","C:\\Users\\matta\\Desktop\\Coding\\Codeworks\\Job Applications\\nPlan\\data-visualisation\\src\\App.jsx":"7"},{"size":761,"mtime":1611826583681,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1606303656219,"results":"10","hashOfConfig":"9"},{"size":48,"mtime":1611826808159,"results":"11","hashOfConfig":"9"},{"size":1750,"mtime":1611837396953,"results":"12","hashOfConfig":"9"},{"size":57,"mtime":1611827351625,"results":"13","hashOfConfig":"9"},{"size":1928,"mtime":1611839282577,"results":"14","hashOfConfig":"9"},{"size":720,"mtime":1611839115239,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"bg0t6b",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\matta\\Desktop\\Coding\\Codeworks\\Job Applications\\nPlan\\data-visualisation\\src\\index.js",[],["32","33"],"C:\\Users\\matta\\Desktop\\Coding\\Codeworks\\Job Applications\\nPlan\\data-visualisation\\src\\reportWebVitals.js",[],"C:\\Users\\matta\\Desktop\\Coding\\Codeworks\\Job Applications\\nPlan\\data-visualisation\\src\\components\\Report\\index.js",[],"C:\\Users\\matta\\Desktop\\Coding\\Codeworks\\Job Applications\\nPlan\\data-visualisation\\src\\components\\Report\\Report.jsx",["34"],"import React, { useEffect, useState } from 'react';\r\nimport { LineGraph } from '../LineGraph';\r\nimport './Report.css'\r\n\r\nconst Report = ({authors, posts}) => {\r\n  const [allAuthors, setAllAuthors] = useState([])\r\n  const [author, setAuthor] = useState() \r\n\r\n  useEffect(() => {\r\n    setAllAuthors(authors)\r\n    setAuthor(authors[0])\r\n  }, [])\r\n\r\n  const handleChange = e => setAuthor(allAuthors[e.target.value]);\r\n  \r\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n  \r\n  const filterPostByAuthor = authorId => posts.filter(post => post.author.id === authorId);\r\n  \r\n  // make array of objects [{date: '2019 Jan', posts: 4}, {date: '2019 Feb', posts: 2}]\r\n  const makeGraphData = posts => {\r\n    const resultObj = {}\r\n    posts.forEach(post => {\r\n      const date = new Date(+post.createdAt).getMonth()\r\n      if (resultObj[date]) resultObj[date] += 1;\r\n      else resultObj[date] = 1;\r\n    })\r\n    return monthNames.map((month, i) => {\r\n      return {\r\n        date: `2019 ${month}`,\r\n        posts: resultObj[i] ? resultObj[i] : 0\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"report-grand-wrapper\">\r\n      <h2>Authors Posting Frequency By Month Report</h2>\r\n      <div className=\"report-select-div\">\r\n        <h3>Select author:</h3>\r\n        <select className=\"report-selector-element\" onChange={handleChange}>\r\n          {authors.map((author, i) => {\r\n            return <option value={i} key={i+author.id}>{author.lastName}</option>\r\n          })}\r\n        </select>\r\n      </div>\r\n      {posts && <LineGraph posts={makeGraphData(filterPostByAuthor(author ? author.id : authors[0].id))} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Report;","C:\\Users\\matta\\Desktop\\Coding\\Codeworks\\Job Applications\\nPlan\\data-visualisation\\src\\components\\LineGraph\\index.js",[],"C:\\Users\\matta\\Desktop\\Coding\\Codeworks\\Job Applications\\nPlan\\data-visualisation\\src\\components\\LineGraph\\LineGraph.jsx",[],"C:\\Users\\matta\\Desktop\\Coding\\Codeworks\\Job Applications\\nPlan\\data-visualisation\\src\\App.jsx",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":12,"column":6,"nodeType":"41","endLine":12,"endColumn":8,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authors'. Either include it or remove the dependency array. If 'setAllAuthors' needs the current value of 'authors', you can also switch to useReducer instead of useState and read 'authors' in the reducer.","ArrayExpression",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [authors]",{"range":"48","text":"49"},[339,341],"[authors]"]